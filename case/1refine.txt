## Problem description:
This problem requires implementing a function `pluck(arr)` that takes in an array `arr` representing a branch of a tree with non-negative integer nodes. The task is to pluck one of the nodes with the smallest even value and return it. The plucked node should be returned in a list `[smallest_value, its index]`. If there are no even values in the array or if the array is empty, the function should return an empty list `[]`.

## Data restrictions:
- The input array `arr` will contain non-negative integers.
- The length of the array `arr` will be between 1 and 10000, inclusive.

## Example explanations:
- For `pluck([4,2,3])`, the smallest even value in the array is 2, and it has the smallest index, which is 1. Therefore, the output should be `[2, 1]`.
- For `pluck([1,2,3])`, the smallest even value in the array is 2, and it has the smallest index, which is 1. Therefore, the output should be `[2, 1]`.
- For `pluck([])`, the input array is empty, so the output should be an empty list `[]`.
- For `pluck([5, 0, 3, 0, 4, 2])`, the smallest even value in the array is 0. There are two zeros, but we should choose the first zero with the smallest index, which is 1. Therefore, the output should be `[0, 1]`.
